name: github-actions
on: [push]
jobs:
  frontend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/unimark
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run lint

  backend-build_cache:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0.29
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: unimark
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RUSTC_FORCE_INCREMENTAL: 1
      DATABASE_URL: "mysql://root:password@localhost:3306/unimark"
    steps:
      - uses: actions/checkout@v3
      - uses: baptiste0928/cargo-install@v1
        name: Install sqlx-cli
        with:
          crate: sqlx-cli
      - uses: ./.github/actions/cache_cargo
      - name: migrate
        run: sqlx db create && sqlx migrate run
        working-directory: backend
      - name: build
        run: cargo build
        working-directory: backend

  backend-fmt:
    runs-on: ubuntu-latest
    needs: backend-build_cache
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add rustfmt
      - uses: ./.github/actions/cache_cargo
      - name: fmt
        run: cargo fmt --all -- --check
        working-directory: backend

  backend-clippy:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0.29
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: unimark
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RUSTC_FORCE_INCREMENTAL: 1
      DATABASE_URL: "mysql://root:password@localhost:3306/unimark"
    needs: backend-build_cache
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - uses: baptiste0928/cargo-install@v1
        name: Install sqlx-cli
        with:
          crate: sqlx-cli
      - uses: ./.github/actions/cache_cargo
      - name: migrate
        run: sqlx db create && sqlx migrate run
        working-directory: backend
      - name: clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: backend
  ecr-push:
    runs-on: ubuntu-latest
    needs: [frontend-lint, backend-fmt, backend-clippy]
    steps:
      - run: echo ecr-push
