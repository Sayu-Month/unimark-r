name: code_build
on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "github-actions"
    branches:
      - main
    types:
      - completed
jobs:
  backend-build:
    name: Backend Build image
    env:
      SERVICE_NAME: unimark-backend
      ECS_TASK_DEFINITION: ./aws/ecs_task_definition.json
      CONTAINER_NAME: unimark
      ECS_SERVICE: unimark
      ECS_CLUSTER: unimark
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.backend-buildx-cache
          key: ${{ runner.os }}-backend-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-backend-buildx-

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ap-northeast-1

      - name: Add IP Address
        env:
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
        run: |
          # Public IP (Github Actions)
          IP_ADDRESS=`curl ifconfig.io`

          # Add IP Address to Security Group Ingress
          aws ec2 authorize-security-group-ingress --group-id ${SECURITY_GROUP_ID} --protocol tcp --port 3306 --cidr "$IP_ADDRESS"/32

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: docker/build-push-action@v2
        id: build-image
        with:
          push: true
          file: backend/Dockerfile
          context: ./backend
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:latest
          build-args: DATABASE_URL=${{ secrets.DATABASE_URL }}
          cache-from: type=local,src=/tmp/.backend-buildx-cache
          cache-to: type=local,dest=/tmp/.backend-buildx-cache-new,mode=max

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ secrets.BUILD_IMAGE }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Remove IP Address
        env:
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
        if: ${{ always() }}
        run: |
          # Public IP (Github Actions)
          IP_ADDRESS=`curl ifconfig.io`

          # Remove IP Address 
          aws ec2 revoke-security-group-ingress --group-id ${SECURITY_GROUP_ID} --protocol tcp --port 3306 --cidr "$IP_ADDRESS"/32

      - name: Move cache
        run: |
          rm -rf /tmp/.backend-buildx-cache
          mv /tmp/.backend-buildx-cache-new /tmp/.backend-buildx-cache
